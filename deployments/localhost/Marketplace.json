{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ItemIsNotListed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        }
      ],
      "name": "MarketplaceNotApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoProceeds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotTheOwnerOfThisNFT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PriceMustBeGreaterThanZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransactionFeeNotIncluded",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "ValueNotThePrice",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "ItemBought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "ItemCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "ItemListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proceeds",
          "type": "uint256"
        }
      ],
      "name": "ProceedsWithdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "LISTING_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TRANSACTION_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "buyNft",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getListedNfts",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenID",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct Marketplace.NFT[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "getListing",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenID",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct Marketplace.NFT",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isListed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "listItem",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nftListings",
      "outputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "unlistItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "updateListing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "viewProceeds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawProceeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb6c2a652f36c0b8373796b6c3e8fb3cdf1acc1caa6b67fffd071a27d248edd42",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1605390",
    "logsBloom": "0x
    "blockHash": "0x630d2cab12f6a10d2ac150c7e73a95ded907d0f054ee60f2f853c4ae6bc06705",
    "transactionHash": "0xb6c2a652f36c0b8373796b6c3e8fb3cdf1acc1caa6b67fffd071a27d248edd42",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1605390",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e79e7ba2fb81045c9f9163c408bc0e99",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ItemIsNotListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"}],\"name\":\"MarketplaceNotApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoProceeds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotTheOwnerOfThisNFT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PriceMustBeGreaterThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransactionFeeNotIncluded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ValueNotThePrice\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"ItemCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proceeds\",\"type\":\"uint256\"}],\"name\":\"ProceedsWithdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LISTING_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSACTION_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"buyNft\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListedNfts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.NFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"getListing\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.NFT\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftListings\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"unlistItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"updateListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"viewProceeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawProceeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/Marketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\nerror PriceMustBeGreaterThanZero();\\nerror TransactionFeeNotIncluded();\\nerror ItemIsNotListed();\\nerror NoProceeds();\\nerror NotTheOwnerOfThisNFT();\\nerror MarketplaceNotApproved(address nftAddress);\\nerror ValueNotThePrice(uint256 price);\\n\\ncontract Marketplace is ReentrancyGuard {\\n\\n    address payable public owner;  \\n    uint256 nftCount;\\n    mapping(uint256 => NFT) public nftListings;\\n    mapping(uint256 => bool) public isListed;\\n    mapping(address => uint256) private sellerProceeds;\\n    uint256 public constant TRANSACTION_FEE = 100 wei;\\n    uint256 public constant LISTING_FEE = 1 ether;\\n\\n    event ItemListed(address indexed seller, address indexed nftAddress, uint256 tokenID, uint256 price);\\n    event ItemCanceled(address indexed seller, address indexed nftAddress, uint256 indexed tokenID);\\n    event ItemBought(address indexed buyer, address indexed nftAddress, uint256 price);\\n    event ProceedsWithdrawn(uint256 proceeds);\\n\\n\\n    struct NFT {\\n        address nftAddress;\\n        uint256 tokenID;\\n        address owner;\\n        uint256 price;\\n    }\\n    \\n    constructor() {\\n        owner = payable(msg.sender);\\n        nftCount = 0;\\n    }\\n\\n    function listItem(address nftAddress, uint256 tokenID, uint256 price) public payable nonReentrant {\\n        if(price < 0) {\\n            revert PriceMustBeGreaterThanZero();\\n        }\\n        if(msg.value <= TRANSACTION_FEE) {\\n            revert TransactionFeeNotIncluded();\\n        }\\n        \\n        IERC721 nft = IERC721(nftAddress);\\n        if (nft.getApproved(tokenID) != address(this)) {\\n            revert MarketplaceNotApproved(nftAddress);\\n        }\\n\\n        owner.transfer(LISTING_FEE);\\n        nftListings[tokenID] = NFT(nftAddress, tokenID, msg.sender, price); \\n        isListed[tokenID] = true;\\n        nftCount = nftCount + 1;\\n\\n        emit ItemListed(msg.sender, nftAddress, tokenID, price);\\n    }\\n\\n    function unlistItem(address nftAddress, uint256 tokenID) public {\\n        if(isListed[tokenID] != true) {\\n            revert ItemIsNotListed();\\n        }\\n        if(nftListings[tokenID].owner != msg.sender) {\\n            revert NotTheOwnerOfThisNFT();\\n        }\\n        IERC721(nftAddress).transferFrom(address(this), msg.sender, tokenID);\\n        delete(nftListings[tokenID]);\\n        isListed[tokenID] = false;\\n        nftCount = nftCount - 1;\\n\\n        emit ItemCanceled(msg.sender, nftAddress, tokenID);\\n    }\\n\\n    function updateListing(address nftAddress, uint256 tokenID, uint256 newPrice) public {\\n        if(isListed[tokenID] != true) {\\n            revert ItemIsNotListed();\\n        }\\n        if(nftListings[tokenID].owner != msg.sender) {\\n            revert NotTheOwnerOfThisNFT();\\n        }\\n        if(newPrice <= 0) {\\n            revert PriceMustBeGreaterThanZero();\\n        }\\n        nftListings[tokenID].price = newPrice;\\n\\n        emit ItemListed(msg.sender, nftAddress, tokenID, newPrice);\\n\\n    }\\n\\n    function buyNft(address nftAddress, uint256 tokenID) public payable nonReentrant {\\n        if(isListed[tokenID] != true) {\\n            revert ItemIsNotListed();\\n        }\\n\\n        NFT memory nft = nftListings[tokenID];\\n        if(msg.value != nft.price) {\\n            revert ValueNotThePrice(nft.price);\\n        }\\n\\n        sellerProceeds[nft.owner] += msg.value;\\n        delete(nftListings[tokenID]);\\n        isListed[tokenID] = false; \\n        IERC721(nftAddress).safeTransferFrom(nft.owner, msg.sender, tokenID);\\n\\n        emit ItemBought(msg.sender, nftAddress, nft.price);\\n    }\\n\\n    function withdrawProceeds() public {\\n        uint256 proceeds = sellerProceeds[msg.sender];\\n        if(proceeds <= 0) {\\n            revert NoProceeds();\\n        }\\n        sellerProceeds[msg.sender] = 0;\\n        payable(msg.sender).transfer(proceeds);\\n\\n        emit ProceedsWithdrawn(proceeds);\\n    }\\n\\n     function getListedNfts() public view returns (NFT[] memory) {\\n        NFT[] memory nfts = new NFT[](nftCount);\\n        for (uint i = 0; i < nftCount; i++) {\\n            if (isListed[i] == true) {\\n                nfts[i] = nftListings[i];\\n            }\\n        }\\n        return nfts;\\n    }\\n\\n    function getListing(uint256 tokenID) public view returns (NFT memory) {\\n        if (isListed[tokenID] != true) {\\n            revert ItemIsNotListed();\\n        }\\n        return nftListings[tokenID];\\n    }\\n\\n    function viewProceeds(address seller) public view returns(uint256) {\\n        return sellerProceeds[seller];\\n    }\\n}\\n\",\"keccak256\":\"0xce29572b508b8974ae0c69951ee0a737b44b623aa54ae74b5047b5221e26c792\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600160008190555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600281905550611b52806100716000396000f3fe6080604052600436106100c25760003560e01c80638d6cb3fb1161007f57806399bd17e41161005957806399bd17e414610251578063b1b235351461027a578063f772adf1146102a5578063fcce4883146102ce576100c2565b80638d6cb3fb146101e45780638da5cb5b1461020f5780639038e6931461023a576100c2565b8063107a274a146100c75780632b86ae38146101045780634ddf4f8f1461012f578063519653ac1461014b5780637c5bb03d1461018857806389bfd38f146101c8575b600080fd5b3480156100d357600080fd5b506100ee60048036038101906100e99190611584565b61030b565b6040516100fb919061185d565b60405180910390f35b34801561011057600080fd5b50610119610456565b6040516101269190611878565b60405180910390f35b610149600480360381019061014491906114f1565b610462565b005b34801561015757600080fd5b50610172600480360381019061016d9190611497565b6107d9565b60405161017f9190611878565b60405180910390f35b34801561019457600080fd5b506101af60048036038101906101aa9190611584565b610822565b6040516101bf94939291906117bb565b60405180910390f35b6101e260048036038101906101dd9190611531565b610892565b005b3480156101f057600080fd5b506101f9610c38565b6040516102069190611800565b60405180910390f35b34801561021b57600080fd5b50610224610de6565b6040516102319190611769565b60405180910390f35b34801561024657600080fd5b5061024f610e0c565b005b34801561025d57600080fd5b50610278600480360381019061027391906114f1565b610f4f565b005b34801561028657600080fd5b5061028f6111cb565b60405161029c9190611878565b60405180910390f35b3480156102b157600080fd5b506102cc60048036038101906102c79190611531565b6111d0565b005b3480156102da57600080fd5b506102f560048036038101906102f09190611584565b61138a565b6040516103029190611822565b60405180910390f35b610313611404565b600115156004600084815260200190815260200160002060009054906101000a900460ff16151514610371576040517f64110c3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815250509050919050565b670de0b6b3a764000081565b61046a6113aa565b600115156004600083815260200190815260200160002060009054906101000a900460ff161515146104c8576040517f64110c3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815250509050806060015134146105f65780606001516040517fb72fb8540000000000000000000000000000000000000000000000000000000081526004016105ed9190611878565b60405180910390fd5b3460056000836040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106499190611906565b9250508190555060036000838152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556003820160009055505060006004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff166342842e0e826040015133856040518463ffffffff1660e01b815260040161073193929190611784565b600060405180830381600087803b15801561074b57600080fd5b505af115801561075f573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f1d23a6255c78522601b841bc62d88a98b1e9a358d1b16957143effa889faa03c83606001516040516107c49190611878565b60405180910390a3506107d56113fa565b5050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154905084565b61089a6113aa565b60008110156108d5576040517f23a3620900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6064341161090f576040517f9c06580100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008390503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc856040518263ffffffff1660e01b81526004016109649190611878565b60206040518083038186803b15801561097c57600080fd5b505afa158015610990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b491906114c4565b73ffffffffffffffffffffffffffffffffffffffff1614610a0c57836040517fbaab9351000000000000000000000000000000000000000000000000000000008152600401610a03919061174e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a76400009081150290604051600060405180830381858888f19350505050158015610a7c573d6000803e3d6000fd5b5060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001838152506003600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015590505060016004600085815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600254610bbd9190611906565b6002819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd547e933094f12a9159076970143ebe73234e64480317844b0dcb36117116de48585604051610c22929190611893565b60405180910390a350610c336113fa565b505050565b6060600060025467ffffffffffffffff811115610c5857610c57611a91565b5b604051908082528060200260200182016040528015610c9157816020015b610c7e611404565b815260200190600190039081610c765790505b50905060005b600254811015610dde57600115156004600083815260200190815260200160002060009054906101000a900460ff1615151415610dcb57600360008281526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481525050828281518110610dbf57610dbe611a62565b5b60200260200101819052505b8080610dd6906119ea565b915050610c97565b508091505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610e8a576040517fc4d8fa8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610f15573d6000803e3d6000fd5b507e85f56592462784083e828817207817f9a8413860eb3c60e01ba90ce6f925d981604051610f449190611878565b60405180910390a150565b600115156004600083815260200190815260200160002060009054906101000a900460ff16151514610fad576040517f64110c3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611048576040517f338dc68600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b815260040161108593929190611784565b600060405180830381600087803b15801561109f57600080fd5b505af11580156110b3573d6000803e3d6000fd5b5050505060036000828152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556003820160009055505060006004600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600254611166919061195c565b600281905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9ba1a3cb55ce8d63d072a886f94d2a744f50cddf82128e897d0661f5ec62315860405160405180910390a45050565b606481565b600115156004600084815260200190815260200160002060009054906101000a900460ff1615151461122e576040517f64110c3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146112c9576040517f338dc68600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008111611303576040517f23a3620900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060036000848152602001908152602001600020600301819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd547e933094f12a9159076970143ebe73234e64480317844b0dcb36117116de4848460405161137d929190611893565b60405180910390a3505050565b60046020528060005260406000206000915054906101000a900460ff1681565b600260005414156113f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e79061183d565b60405180910390fd5b6002600081905550565b6001600081905550565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b60008135905061146781611aee565b92915050565b60008151905061147c81611aee565b92915050565b60008135905061149181611b05565b92915050565b6000602082840312156114ad576114ac611ac0565b5b60006114bb84828501611458565b91505092915050565b6000602082840312156114da576114d9611ac0565b5b60006114e88482850161146d565b91505092915050565b6000806040838503121561150857611507611ac0565b5b600061151685828601611458565b925050602061152785828601611482565b9150509250929050565b60008060006060848603121561154a57611549611ac0565b5b600061155886828701611458565b935050602061156986828701611482565b925050604061157a86828701611482565b9150509250925092565b60006020828403121561159a57611599611ac0565b5b60006115a884828501611482565b91505092915050565b60006115bd8383611686565b60808301905092915050565b6115d2816119a2565b82525050565b6115e181611990565b82525050565b6115f081611990565b82525050565b6000611601826118cc565b61160b81856118e4565b9350611616836118bc565b8060005b8381101561164757815161162e88826115b1565b9750611639836118d7565b92505060018101905061161a565b5085935050505092915050565b61165d816119b4565b82525050565b6000611670601f836118f5565b915061167b82611ac5565b602082019050919050565b60808201600082015161169c60008501826115d8565b5060208201516116af6020850182611730565b5060408201516116c260408501826115d8565b5060608201516116d56060850182611730565b50505050565b6080820160008201516116f160008501826115d8565b5060208201516117046020850182611730565b50604082015161171760408501826115d8565b50606082015161172a6060850182611730565b50505050565b611739816119e0565b82525050565b611748816119e0565b82525050565b600060208201905061176360008301846115e7565b92915050565b600060208201905061177e60008301846115c9565b92915050565b600060608201905061179960008301866115e7565b6117a660208301856115e7565b6117b3604083018461173f565b949350505050565b60006080820190506117d060008301876115e7565b6117dd602083018661173f565b6117ea60408301856115e7565b6117f7606083018461173f565b95945050505050565b6000602082019050818103600083015261181a81846115f6565b905092915050565b60006020820190506118376000830184611654565b92915050565b6000602082019050818103600083015261185681611663565b9050919050565b600060808201905061187260008301846116db565b92915050565b600060208201905061188d600083018461173f565b92915050565b60006040820190506118a8600083018561173f565b6118b5602083018461173f565b9392505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611911826119e0565b915061191c836119e0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561195157611950611a33565b5b828201905092915050565b6000611967826119e0565b9150611972836119e0565b92508282101561198557611984611a33565b5b828203905092915050565b600061199b826119c0565b9050919050565b60006119ad826119c0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006119f5826119e0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611a2857611a27611a33565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b611af781611990565b8114611b0257600080fd5b50565b611b0e816119e0565b8114611b1957600080fd5b5056fea264697066735822122076a4bbfa2856eb3a436963239db9a4f01e912c3876e824eebc63183c5c6e4fc364736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c80638d6cb3fb1161007f57806399bd17e41161005957806399bd17e414610251578063b1b235351461027a578063f772adf1146102a5578063fcce4883146102ce576100c2565b80638d6cb3fb146101e45780638da5cb5b1461020f5780639038e6931461023a576100c2565b8063107a274a146100c75780632b86ae38146101045780634ddf4f8f1461012f578063519653ac1461014b5780637c5bb03d1461018857806389bfd38f146101c8575b600080fd5b3480156100d357600080fd5b506100ee60048036038101906100e99190611584565b61030b565b6040516100fb919061185d565b60405180910390f35b34801561011057600080fd5b50610119610456565b6040516101269190611878565b60405180910390f35b610149600480360381019061014491906114f1565b610462565b005b34801561015757600080fd5b50610172600480360381019061016d9190611497565b6107d9565b60405161017f9190611878565b60405180910390f35b34801561019457600080fd5b506101af60048036038101906101aa9190611584565b610822565b6040516101bf94939291906117bb565b60405180910390f35b6101e260048036038101906101dd9190611531565b610892565b005b3480156101f057600080fd5b506101f9610c38565b6040516102069190611800565b60405180910390f35b34801561021b57600080fd5b50610224610de6565b6040516102319190611769565b60405180910390f35b34801561024657600080fd5b5061024f610e0c565b005b34801561025d57600080fd5b50610278600480360381019061027391906114f1565b610f4f565b005b34801561028657600080fd5b5061028f6111cb565b60405161029c9190611878565b60405180910390f35b3480156102b157600080fd5b506102cc60048036038101906102c79190611531565b6111d0565b005b3480156102da57600080fd5b506102f560048036038101906102f09190611584565b61138a565b6040516103029190611822565b60405180910390f35b610313611404565b600115156004600084815260200190815260200160002060009054906101000a900460ff16151514610371576040517f64110c3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815250509050919050565b670de0b6b3a764000081565b61046a6113aa565b600115156004600083815260200190815260200160002060009054906101000a900460ff161515146104c8576040517f64110c3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815250509050806060015134146105f65780606001516040517fb72fb8540000000000000000000000000000000000000000000000000000000081526004016105ed9190611878565b60405180910390fd5b3460056000836040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106499190611906565b9250508190555060036000838152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556003820160009055505060006004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff166342842e0e826040015133856040518463ffffffff1660e01b815260040161073193929190611784565b600060405180830381600087803b15801561074b57600080fd5b505af115801561075f573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f1d23a6255c78522601b841bc62d88a98b1e9a358d1b16957143effa889faa03c83606001516040516107c49190611878565b60405180910390a3506107d56113fa565b5050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154905084565b61089a6113aa565b60008110156108d5576040517f23a3620900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6064341161090f576040517f9c06580100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008390503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc856040518263ffffffff1660e01b81526004016109649190611878565b60206040518083038186803b15801561097c57600080fd5b505afa158015610990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b491906114c4565b73ffffffffffffffffffffffffffffffffffffffff1614610a0c57836040517fbaab9351000000000000000000000000000000000000000000000000000000008152600401610a03919061174e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a76400009081150290604051600060405180830381858888f19350505050158015610a7c573d6000803e3d6000fd5b5060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001838152506003600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015590505060016004600085815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600254610bbd9190611906565b6002819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd547e933094f12a9159076970143ebe73234e64480317844b0dcb36117116de48585604051610c22929190611893565b60405180910390a350610c336113fa565b505050565b6060600060025467ffffffffffffffff811115610c5857610c57611a91565b5b604051908082528060200260200182016040528015610c9157816020015b610c7e611404565b815260200190600190039081610c765790505b50905060005b600254811015610dde57600115156004600083815260200190815260200160002060009054906101000a900460ff1615151415610dcb57600360008281526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481525050828281518110610dbf57610dbe611a62565b5b60200260200101819052505b8080610dd6906119ea565b915050610c97565b508091505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610e8a576040517fc4d8fa8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610f15573d6000803e3d6000fd5b507e85f56592462784083e828817207817f9a8413860eb3c60e01ba90ce6f925d981604051610f449190611878565b60405180910390a150565b600115156004600083815260200190815260200160002060009054906101000a900460ff16151514610fad576040517f64110c3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611048576040517f338dc68600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b815260040161108593929190611784565b600060405180830381600087803b15801561109f57600080fd5b505af11580156110b3573d6000803e3d6000fd5b5050505060036000828152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556003820160009055505060006004600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600254611166919061195c565b600281905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9ba1a3cb55ce8d63d072a886f94d2a744f50cddf82128e897d0661f5ec62315860405160405180910390a45050565b606481565b600115156004600084815260200190815260200160002060009054906101000a900460ff1615151461122e576040517f64110c3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146112c9576040517f338dc68600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008111611303576040517f23a3620900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060036000848152602001908152602001600020600301819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd547e933094f12a9159076970143ebe73234e64480317844b0dcb36117116de4848460405161137d929190611893565b60405180910390a3505050565b60046020528060005260406000206000915054906101000a900460ff1681565b600260005414156113f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e79061183d565b60405180910390fd5b6002600081905550565b6001600081905550565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b60008135905061146781611aee565b92915050565b60008151905061147c81611aee565b92915050565b60008135905061149181611b05565b92915050565b6000602082840312156114ad576114ac611ac0565b5b60006114bb84828501611458565b91505092915050565b6000602082840312156114da576114d9611ac0565b5b60006114e88482850161146d565b91505092915050565b6000806040838503121561150857611507611ac0565b5b600061151685828601611458565b925050602061152785828601611482565b9150509250929050565b60008060006060848603121561154a57611549611ac0565b5b600061155886828701611458565b935050602061156986828701611482565b925050604061157a86828701611482565b9150509250925092565b60006020828403121561159a57611599611ac0565b5b60006115a884828501611482565b91505092915050565b60006115bd8383611686565b60808301905092915050565b6115d2816119a2565b82525050565b6115e181611990565b82525050565b6115f081611990565b82525050565b6000611601826118cc565b61160b81856118e4565b9350611616836118bc565b8060005b8381101561164757815161162e88826115b1565b9750611639836118d7565b92505060018101905061161a565b5085935050505092915050565b61165d816119b4565b82525050565b6000611670601f836118f5565b915061167b82611ac5565b602082019050919050565b60808201600082015161169c60008501826115d8565b5060208201516116af6020850182611730565b5060408201516116c260408501826115d8565b5060608201516116d56060850182611730565b50505050565b6080820160008201516116f160008501826115d8565b5060208201516117046020850182611730565b50604082015161171760408501826115d8565b50606082015161172a6060850182611730565b50505050565b611739816119e0565b82525050565b611748816119e0565b82525050565b600060208201905061176360008301846115e7565b92915050565b600060208201905061177e60008301846115c9565b92915050565b600060608201905061179960008301866115e7565b6117a660208301856115e7565b6117b3604083018461173f565b949350505050565b60006080820190506117d060008301876115e7565b6117dd602083018661173f565b6117ea60408301856115e7565b6117f7606083018461173f565b95945050505050565b6000602082019050818103600083015261181a81846115f6565b905092915050565b60006020820190506118376000830184611654565b92915050565b6000602082019050818103600083015261185681611663565b9050919050565b600060808201905061187260008301846116db565b92915050565b600060208201905061188d600083018461173f565b92915050565b60006040820190506118a8600083018561173f565b6118b5602083018461173f565b9392505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611911826119e0565b915061191c836119e0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561195157611950611a33565b5b828201905092915050565b6000611967826119e0565b9150611972836119e0565b92508282101561198557611984611a33565b5b828203905092915050565b600061199b826119c0565b9050919050565b60006119ad826119c0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006119f5826119e0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611a2857611a27611a33565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b611af781611990565b8114611b0257600080fd5b50565b611b0e816119e0565b8114611b1957600080fd5b5056fea264697066735822122076a4bbfa2856eb3a436963239db9a4f01e912c3876e824eebc63183c5c6e4fc364736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 207,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address_payable"
      },
      {
        "astId": 209,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "nftCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 214,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "nftListings",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(NFT)267_storage)"
      },
      {
        "astId": 218,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "isListed",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 222,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "sellerProceeds",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(NFT)267_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Marketplace.NFT)",
        "numberOfBytes": "32",
        "value": "t_struct(NFT)267_storage"
      },
      "t_struct(NFT)267_storage": {
        "encoding": "inplace",
        "label": "struct Marketplace.NFT",
        "members": [
          {
            "astId": 260,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "nftAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 262,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "tokenID",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 264,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "owner",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 266,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "price",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}